<?php

namespace ByTIC\Omnipay\Romcard\Message\Traits;

use ByTIC\Omnipay\Common\Message\Traits\GatewayNotificationResponseTrait;
use ByTIC\Omnipay\Romcard\Helper;
use DateTime;

/**
 * Class CompletePurchaseResponseTrait
 * @package ByTIC\Omnipay\Romcard\Message\Traits
 */
trait CompletePurchaseResponseTrait
{
    use GatewayNotificationResponseTrait;

    /**
     * Is the response successful?
     *
     * @return boolean
     */
    public function isSuccessful()
    {
        return $this->getAction() == Helper::ACTION_APPROVED;
    }

    public function isError()
    {

    }

    public function getAction()
    {
        return $this->getCode();
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * Status code (string)
     *
     * @return string
     */
    public function getCode()
    {
        return $this->hasNotificationDataItem('ACTION') ? $this->getNotificationDataItem('ACTION') : null;
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * Gateway Reference
     *
     * @return null|string A reference provided by the gateway to represent this transaction
     */
    public function getTransactionReference()
    {
        return $this->hasNotificationDataItem('RRN') ? $this->getNotificationDataItem('RRN') : null;
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * Get the transaction ID as generated by the merchant website.
     *
     * @return string
     */
    public function getTransactionId()
    {
        return $this->hasNotificationDataItem('ORDER') ? $this->getNotificationDataItem('ORDER') : null;
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * @return false|string
     */
    public function getTransactionDate()
    {
        if (!$this->hasNotificationDataItem('TIMESTAMP')) {
            return null;
        }
        $timestamp = $this->getNotificationDataItem('TIMESTAMP');
        $dateTime = DateTime::createFromFormat('YmdHis', $timestamp);

        return $dateTime->format('Y-m-d H:i:s');
    }

    /**
     * Response Message
     *
     * @return null|string A response message from the payment gateway
     */
    public function getMessage()
    {
        return $this->hasNotificationDataItem('MESSAGE') ? $this->getNotificationDataItem('MESSAGE') : null;
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * @return bool
     */
    protected function canProcessModel()
    {
        return $this->hasDataProperty('notification');
    }
}
